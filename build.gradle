plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'groovy'
}

group = 'it.kgtg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	implementation("org.mongodb:mongo-java-driver:${mongoClientVersion}")
	implementation("org.webjars:jquery:${jqueryVersion}")
	implementation("org.webjars:bootstrap:${bootstrapVersion}")
	implementation("org.apache.commons:commons-lang3:${commonLangVersion}")
	implementation("com.google.guava:guava:${guavaVersion}")
	implementation("io.springfox:springfox-swagger2:${swaggerVersion}")
	implementation("io.springfox:springfox-swagger-ui:${swaggerVersion}")
	// Needed because there is some kind of issue with swagger: https://github.com/springfox/springfox/issues/2932
	implementation("org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE")
	implementation("javax.validation:validation-api:${validationAPIVersion}")
	// This should not be added to production classpath
	implementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embededMongoVersion}")
	implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")

	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
	implementation("org.springframework.boot:spring-boot-starter-web")
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	annotationProcessor("org.projectlombok:lombok:${lombockVersion}")
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation("org.spockframework:spock-core:${spockVersion}")
	testImplementation("org.spockframework:spock-spring:${spockVersion}")
	testImplementation("com.athaydes:spock-reports:${spockReportsVersion}", { transitive = false })
}

test {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', 'test'
	systemProperty "file.encoding", "utf-8"
	systemProperty 'com.athaydes.spockframework.report.showCodeBlocks', true
}
